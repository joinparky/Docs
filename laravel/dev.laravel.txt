* INSTALL LARAVEL 
    $ cd ~/Homestead/
    $ vagrant up
    $ vagrant ssh
    $ mkdir -p /home/vagrant/workspace/dev.laravel
    $ composer create-project laravel/laravel dev.laravel --no-dev --prefer-dist -vvv
    $ cd dev.laravel 
    $ composer update
    $ sudo /etc/init.d/php7.0-fpm restart

* html helper 
    laravelcollective/html
    https://laravelcollective.com/docs/5.2/html
    > add make function 
        D:\workspace\vagrant\dev.laravel\vendor\laravelcollective\html\src\FormBuilder.php

* js-validation
    https://github.com/proengsoft/laravel-jsvalidation

* tip
    $ php artisan tinker
        //테이블명: 스네이크 케이스, 복수형
        >>> str_singular(studly_case('article_categories'))
        //클래스명
        >>> str_plural(snake_case('ArticleCategory'))

* db debugging
    D:\workspace\vagrant\dev.laravel\vendor\laravel\framework\src\Illuminate\Database\Connection.php
        $loggingQueries = true;

----

* PHPSTORM
    > http://blog.jetbrains.com/phpstorm/2015/01/laravel-development-using-phpstorm/
        > Settings > Plugins > Browse repositories… 
            >> Laravel Plugin > restart
        > Settings > Other Settings > Laravel Plugin 
            >> Enable Plugin for this Project

    > https://github.com/barryvdh/laravel-ide-helper
        >> composer require barryvdh/laravel-ide-helper
        >> vi config/app.php
            providers
                Barryvdh\LaravelIdeHelper\IdeHelperServiceProvider::class,
        >> php artisan ide-helper:generate
        >> php artisan ide-helper:models
        >> php artisan ide-helper:meta

----

* ENV
    D:\workspace\vagrant\dev.laravel\.env
        APP_DEBUG=true
        APP_URL=http://dev.laravel
    D:\workspace\vagrant\dev.laravel\config\app.php
        'timezone' => 'Asia/Seoul',
        'locale' => 'ko',

    > 라우트목록
        $ php artisan route:list
    > 인증
        php artisan make:auth
        https://www.xpressengine.com/learn/23061316
    > 마이그레이션 실행
        $ php artisan migrate
        > 마이그레이션파일 만들기
        $ php artisan make:migration create_users_table

----

* 관리자페이지
    > admin site url: setting/dashboard
    $ php artisan make:controller Setting/DashboardController
        > Route::resource('/setting/dashboard', 'Setting/DashboardController@index');

----

* USER CRUD
    > php artisan make:controller Setting/UserController --resource
        >> Route::resource('/user', 'UserController');
    > php artisan make:request UserRequest
    > php artisan make:policy UserPolicy
    > provider 등록
        >> D:\workspace\vagrant\dev.laravel\app\Providers\AuthServiceProvider.php

----
* MENU 
    > add admin menu
        D:\workspace\vagrant\dev.laravel\app\Providers\AppServiceProvider.php

    > menu 관리
    php artisan make:migration create_menus_table --create=menus
    php artisan migrate
    php artisan make:controller Setting/MenuController --resource
    php artisan make:model Menu
    php artisan make:request MenuRequest
    php artisan make:policy MenuPolicy

----
* POST CRUD
    > 게시판 이동로직 계층형으로 가능 ok 
        > 소프트 삭제하기
        > 중간에 삭제 되었을 때 확인 rebulid 하면 큰일
        > 삭제로직 답글이 있을 경우 삭제는? 

    php artisan make:migration create_posts_table --create=posts
    php artisan migrate
    php artisan make:controller Setting/PostController --resource
        > route 등록
        D:\workspace\vagrant\dev.laravel\app\Http\routes.php
        Route::resource('setting/post', 'PostController');
    php artisan make:model Post
    php artisan make:request PostRequest
    php artisan make:policy PostPolicy
        > auth provider 등록
        D:\workspace\vagrant\dev.laravel\app\Providers\AuthServiceProvider.php
        Post::class => PostPolicy::class,



----

* TODO 
    > menus.id => 10000부터 시작 1부터 시작으로 변경
    >> 1이 아니라 0으로 변경

    > rewrite menu migration 

    > authorization
        >> http://laravel.kr/docs/5.2/authorization
        >>> isAdmin , isSuperAdmin
        >>> policy 파일에서 role db 검색하여 로직구성
            D:\workspace\vagrant\dev.laravel\app\Policies\UserPolicy.php
        >>> 관리자, 슈퍼어드민, 어드민, 카페어드민, 권한
            php artisan route:list 로부터 롤 생성

        권한
          Roll db 화
          슈퍼관리자? 일반적인 관리자? 사용자? 권한, 작성자 권한. 두가지 타입이 있음
          리퀘트. 폴리시 어디서 권한체크 할지 결정
            블레이드에서 버튼 제어를 하려면 폴리시에서 하는게 맞음. 폴리시 생성자에서 롤 체크 가능?
          사용자 페이지에서도 테스트
          컨트롤러 생성자에서 자동으로 테스트
          사용자 페이지는 컨트롤러 생성자에 폴리시 미적용?

    > route cache
        >> php artisan route:cache
        >> php artisan route:clear


    > 게시판 
        대용량 데이터 test
          100만건. 답글입력. 페이징.
        게시판 생성로직
          BoardController@store
        $request->boardId, $request->id 삭제
        이동로직
          이동시 실제글은 남겨놈. 소프트식제. 삭제하면 리빌드 해야함?










* DONE
    > display left menu
    > 소프트 삭제하기
    > http://laravel.kr/docs/5.2/validation
        >> jsvalidation
    > 모델필드(fillable, hidden)와 밸리데이터 관계





----

* add laravel menu 
    > vi composer.json 
        > add require: "vespakoen/menu": "3.*"
    > $ composer update

    And add the following to your config/app.php file :
        In the Service Providers array : 'Menu\MenuServiceProvider',
        In the aliases array : 'Menu' => 'Menu\Menu',

    Lastly, run the following from your project's root dir:
        php artisan vendor:publish


http://learninglaravel.net/laravel-dynamic-menu-tutorial/link
https://github.com/lavary/laravel-menu#getting-started
https://github.com/vespakoen/menu

* whereis my customer library(function or class)
    http://ghost.rivario.com/laravel4%EC%97%90-%EC%82%AC%EC%9A%A9%EC%9E%90-%EB%9D%BC%EC%9D%B4%EB%B8%8C%EB%9F%AC%EB%A6%AC-%EC%B6%94%EA%B0%80%ED%95%98%EA%B8%B0/
    https://laracasts.com/discuss/channels/requests/l5-how-to-add-my-own-custom-class

---

* TOREAD
    > http://ghost.rivario.com/laravel-faq/

----

* create db
    CREATE DATABASE sebinetech;
    GRANT ALL PRIVILEGES ON sebinetech.* TO sebinetech@localhost IDENTIFIED BY 'sebinetech*';
    FLUSH PRIVILEGES;

* set, get global variable
> laravel5 global variable
> where is constant

* put ftp ref-codeigniter source

* add laravelcollective
    https://laravelcollective.com/docs/5.2/html
    composer require laravelcollective/html:5.2

    $ php artisan tinker
    >>> echo Form::text('foo')

* auto deployment
    > push server use ftp?

----

* SETTING 
> vm setting
    $ cd ~/Homestead/
    $ vagrant up
    $ vagrant ssh
    $ composer create-project laravel/laravel /home/vagrant/workspace/dev.laravel --no-dev --prefer-dist -vvv
    $ serve dev.laravel /home/vagrant/workspace/dev.laravel/public 80
    $ mysql -uroot -psecret

> add hosts file
    192.168.10.10  dev.laravel

> http://dev.laravel

> phpstorm
    File > New Project...

